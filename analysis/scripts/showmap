#!/usr/bin/env python2
#
# showmap
#   Plays i420 YUV video
#
# by Anton Schubert <anton.schubert@mailbox.org>

import argparse
import os
import cv2
import numpy as np

class yuvVideo:
    def __init__(self, path, width, height, fps):
        self.fd = open(path, 'rb')
        self.width = width
        self.height = height
        self.fps = fps
        self.planeSize = self.width * self.height
        self.frameSize = self.planeSize * 12 / 8 # 12 bits per pixel
        self.fileSize = os.stat(path).st_size
        self.numFrames = self.fileSize / self.frameSize

    # read y-component from i420 frame
    def readFrame(self, frame):
        self.fd.seek(frame * self.frameSize)
        y = self.fd.read(self.planeSize)
        v = self.fd.read(self.planeSize / 4)
        u = self.fd.read(self.planeSize / 4)
        return np.fromstring(y, np.uint8).reshape((self.height, self.width))

    def close(self):
        self.fd.close()

    def __str__(self):
        return "(Video size: %d, frames: %d)" % (self.fileSize, self.numFrames)

parser = argparse.ArgumentParser(description="Show saliency map in YUV i420 format")
parser.add_argument('file', help="yuv video")
args = parser.parse_args()

video = yuvVideo(args.file, 720, 576, 25)

for n in range(video.numFrames):
    frame = video.readFrame(n)
    cv2.imshow('Frame', frame)
    if cv2.waitKey(1000 / video.fps) & 0xFF == ord('q'):
        break

# Release everything if job is finished
video.close()
cv2.destroyAllWindows()
